# ================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ================================================================
# This file contains production-specific overrides for the base values.yaml
# Usage: helm install myapp . -f values.yaml -f values.prod.yaml

# -- Production namespace
namespace: production

# -- High availability replica count
replicaCount: 3

# -- Production image configuration
image:
  # -- Never pull unless not present
  pullPolicy: IfNotPresent
  # -- Use specific version tag in production
  tag: "v1.0.0"

# -- Production ingress configuration
ingress:
  # -- Enable ingress for production
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: myapp.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: myapp-prod-tls
      hosts:
        - myapp.example.com

# -- Production resource limits
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
    ephemeral-storage: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi
    ephemeral-storage: 1Gi

# -- Production environment variables
env:
  enabled: true
  variables:
    LOG_LEVEL: "info"
    DEBUG: "false"
    NODE_ENV: "production"
    ASPNETCORE_ENVIRONMENT: "Production"

# -- Production health checks
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 10

readinessProbe:
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 5

startupProbe:
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 30
  successThreshold: 1
  timeoutSeconds: 5

# -- Production autoscaling
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15

# -- Production PDB for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# -- Production network policy (strict)
networkPolicy:
  enabled: true
  ingress:
    # Allow only from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
    # Allow from monitoring namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 8080
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow HTTPS to external services
    - to: []
      ports:
        - protocol: TCP
          port: 443
    # Allow database connections
    - to:
        - namespaceSelector:
            matchLabels:
              name: database
      ports:
        - protocol: TCP
          port: 5432

# -- Production monitoring (full)
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    timeout: 10s
    path: /metrics
    labels:
      release: prometheus

# -- Production security (full enforcement)
podSecurityStandards:
  enabled: true
  enforceBaseline: true
  enforceRestricted: true

# -- Production compliance (enabled)
compliance:
  enabled: true
  framework: "NIST"
  level: "high"
  auditLogging: true
  auditLogLevel: "info"
  auditDestinations:
    - type: "azureLogAnalytics"
      workspaceId: "YOUR_WORKSPACE_ID"
      sharedKey: "YOUR_SHARED_KEY"
  requirements:
    - id: "AC-2"
      name: "Account Management"
      description: "Manage information system accounts"
      status: "implemented"
      evidence: "RBAC and service accounts configured"
    - id: "AC-3"
      name: "Access Enforcement"
      description: "Enforce approved authorizations"
      status: "implemented"
      evidence: "Network policies and RBAC enforced"
    - id: "SC-8"
      name: "Transmission Confidentiality"
      description: "Protect communications"
      status: "implemented"
      evidence: "TLS encryption for all communications"
  encryptionAtRest: true

# -- Production resource governance
resourceQuota:
  enabled: true
  requests:
    cpu: "10"
    memory: "20Gi"
  limits:
    cpu: "20"
    memory: "40Gi"
  persistentvolumeclaims: "10"
  pods: "50"
  services: "20"
  secrets: "50"
  configmaps: "50"

limitRange:
  enabled: true
  container:
    default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    max:
      cpu: "4"
      memory: "8Gi"
    min:
      cpu: "10m"
      memory: "64Mi"
  pod:
    max:
      cpu: "8"
      memory: "16Gi"
    min:
      cpu: "10m"
      memory: "64Mi"

# -- Production Azure integration
azureKeyVault:
  enabled: true
  useVMManagedIdentity: false
  vaultName: "prod-keyvault"
  clientId: "YOUR_CLIENT_ID"
  tenantId: "YOUR_TENANT_ID"
  secrets:
    database-password: DB_PASSWORD
    api-key: API_KEY
    connection-string: CONNECTION_STRING

# -- Production AKS configuration
aks:
  workloadIdentity:
    enabled: true
    annotations:
      azure.workload.identity/client-id: "YOUR_WORKLOAD_IDENTITY_CLIENT_ID"
  topologySpreadConstraints:
    enabled: true
    constraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: myapp

# -- Production priority class
priorityClassName: "high-priority"

# -- Production termination grace period
terminationGracePeriodSeconds: 60
